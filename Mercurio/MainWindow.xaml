<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Mercurio.MainWindow"
        xmlns:local="clr-namespace:Mercurio"
        Title="Mercurio Secure Communicator" Height="435" Width="598" Closing="OnClosing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <local:BoolToStringConverter x:Key="BoolToInverse" FalseValue="True" TrueValue="False"/>
        <local:BoolToStringConverter x:Key="BoolToInverseVisibility" FalseValue="Visible" TrueValue="Hidden"/>
        <local:BoolToStringConverter x:Key="PanelControlButtonText" FalseValue="Invite" TrueValue="Hide"/>
        <local:BoolToStringConverter x:Key="PasswordValidationWeight" FalseValue="Normal" TrueValue="Bold"/>
        <local:BoolToStringConverter x:Key="PasswordValidationColor" FalseValue="Black" TrueValue="Red"/>
        <local:BoolToStringConverter x:Key="InvitationGridHeight" FalseValue="0" TrueValue="*"/>
        <local:BoolToStringConverter x:Key="InvitationGridMinHeight" FalseValue="0" TrueValue="50"/>
    </Window.Resources>
    <Grid Name="grdBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid Name="grdMessagerUI" IsEnabled="{Binding Locked, Converter={StaticResource BoolToInverse}}"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110" MinWidth="110"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="40"/>
                <RowDefinition Height="42" MinHeight="42"/>
                <RowDefinition Height="{Binding InvitationPanelHeight}"/>
                <RowDefinition Height="26" MinHeight="26"/>
            </Grid.RowDefinitions>
            <Grid x:Name="grdContactsAndInvitations" Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="{Binding HasInvitations, Converter={StaticResource InvitationGridHeight}}" MinHeight="{Binding HasInvitations, Converter={StaticResource InvitationGridMinHeight}}"></RowDefinition>
                </Grid.RowDefinitions>
                <DataGrid x:Name="dgUsers" Grid.Column="0" Grid.Row="0" ItemsSource="{Binding Users}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedUser}">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="colUsers" Binding="{Binding NameAndNumberUnread, Mode=OneWay}" ClipboardContentBinding="{x:Null}" Width="*" Header="Contact Name"/>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid x:Name="dgInvitations" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Invitations}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedInvitation}">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="colInvitations" Binding="{Binding Address, Mode=OneWay}" Width="*" Header="Invitations"/>
                    </DataGrid.Columns>
                </DataGrid>
                <GridSplitter Grid.Column="0" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
            </Grid>
            <Grid Name="grdInvitationDisplay" Grid.Row="0" Grid.Column="1" Visibility="{Binding HasInvitationSelected, Converter={StaticResource BoolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>                    
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="70"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Name="tbInvitationReviewInstructions" Grid.ColumnSpan="2" TextWrapping="Wrap" Margin="10,10,10,10" FontWeight="Medium">
                    <Run>Review the evidence from the invitation.</Run>
                    <Run FontWeight="Bold" Foreground="Red">Only accept it if you are absolutely convinced the invitation comes from who it says it does and you want to communicate with them.</Run>
                </TextBlock>
                <Label Name="lblInvitationLabel" Grid.Column="0" Grid.Row="1">Address:</Label>
                <Label Name="lblInvationAddress" Grid.Column="1" Grid.Row="1" Content="{Binding SelectedInvitation.Address}"/>
                <Label Name="lblInvitationFingerprintLabel" Grid.Column="0" Grid.Row="2">Fingerprint:</Label>
                <Label Name="lblInvitationFingerprint" Grid.Column="1" Grid.Row="2" Content="{Binding SelectedInvitationFingerprint}"/>
                <Label Name="lblInvitationEvidenceURLLabel" Grid.Column="0" Grid.Row="3">Evidence Link:</Label>
                <TextBlock Name="lblInvitationEvidenceURL" Grid.Column="1" Grid.Row="3"><Hyperlink NavigateUri="{Binding SelectedInvitation.EvidenceURL}"><Run Text="{Binding SelectedInvitation.EvidenceURL}"/></Hyperlink></TextBlock>
                <StackPanel Name="spReviewInvitationButtons" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                    <Button Name="btnAcceptInvitation" Height="23" Padding="10,0,10,0" Margin="0,0,10,0">Accept</Button>
                    <Button Name="btnRejectInvitation" Height="23" Padding="10,0,10,0">Reject</Button>
                </StackPanel>
            </Grid>
            <DataGrid x:Name="dgMessages" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Messages}" AutoGenerateColumns="False" d:IsHidden="True" Visibility="{Binding HasInvitationSelected, Converter={StaticResource BoolToInverseVisibility}}">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Representation}" ClipboardContentBinding="{x:Null}" Width="*" Header="Message"/>
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="2"/>
            <Grid x:Name="grdMessagerUIControls"
        		Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Height="44" VerticalAlignment="Center">
                <Button x:Name="btnInvite" Height="23" Content="{Binding InvitationPanelVisible, Converter={StaticResource PanelControlButtonText}}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="75" Command="{Binding ToggleInvitationPanel}" IsDefault="{Binding InvitationPanelVisible, Converter={StaticResource BoolToInverse}}"/>
                <StackPanel x:Name="spOperatingAs2" Margin="0,10,10,0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock x:Name="tbOperatingAs" HorizontalAlignment="Right" Margin="0,3,0,0" TextWrapping="Wrap" Text="Operating As:" VerticalAlignment="Top" Width="77"/>
                    <ComboBox x:Name="cmbOperatingUser" HorizontalAlignment="Right" VerticalAlignment="Top" Width="185" Height="24" SelectedItem="{Binding SelectedIdentity}" ItemsSource="{Binding AvailableIdentities}" DisplayMemberPath="Name" SelectedValuePath="Name"/>
                </StackPanel>
            </Grid>
            <Grid x:Name="grdInvitationPane" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0" FocusManager.FocusedElement="{Binding ElementName=txtAddress}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="110" MinWidth="110"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="50"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Name="tbInvitationInstructions" Grid.Row="0" Grid.ColumnSpan="3" Grid.Column="0" TextWrapping="Wrap" Margin="10,7,10,7" MinHeight="30" FontWeight="Medium"><Run Text="Your invitation must include a link to an evidence video. This should be a video of you speaking your key fingerprint, so that the recipient can confirm it's really you."/></TextBlock>
                <Label x:Name="lblFingerprint" Grid.Row="1" Grid.Column="0" Margin="5,0,0,0" Content="Your fingerprint is:" HorizontalAlignment="Left" VerticalAlignment="Center" Width="Auto"/>
                <Label x:Name="lblFingerprintText" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Foreground="Green" HorizontalAlignment="Stretch" Margin="5,0,10,0" VerticalAlignment="Center" Width="Auto" FontWeight="Bold" Content="{Binding FingerprintText}"/>
                <Label x:Name="lblAddress" Grid.Row="2" Grid.Column="0" Margin="5,0,0,0" Content="Address to invite:" HorizontalAlignment="Left" VerticalAlignment="Center" Width="Auto"/>
                <TextBox x:Name="txtAddress1" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="5,0,10,0" VerticalAlignment="Center" Width="Auto" Text="{Binding RecipientAddress, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>
                <Label x:Name="lblEvidence" Grid.Row="3" Grid.Column="0" Margin="5,0,0,0" Content="Evidence Link:" HorizontalAlignment="Left" VerticalAlignment="Center" Width="Auto"/>
                <TextBox x:Name="txtEvidence" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="5,0,10,0" VerticalAlignment="Center" Width="Auto" Text="{Binding EvidenceURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <StackPanel Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right" MinHeight="35">
                    <Button x:Name="btnSendInvite" Content="Send Invitation" Height="22" Margin="0,0,10,10" Padding="10,0,10,0" VerticalAlignment="Bottom" Width="Auto" IsDefault="{Binding InvitationPanelVisible}" IsEnabled="{Binding CanSendInvitation}" Command="{Binding SendInvitation}"/>
                </StackPanel>
            </Grid>
            <TextBox Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0" x:Name="tbStatus" Height="26" TextWrapping="Wrap" VerticalAlignment="Bottom"/>
        </Grid>
        <Grid x:Name="grdPassword" Grid.Row="0" Grid.RowSpan="4" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding Locked, Converter={StaticResource BoolToVisibility}}" d:IsHidden="True">
            <Rectangle x:Name="recOverlay" Fill="#FFF4F4F5" Stroke="Black" Opacity="85"/>
            <Grid x:Name="grdPasswordEntry" Height="140" MinHeight="120" Width="400" MinWidth="200" FocusManager.FocusedElement="{Binding ElementName=pbPassword}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" MinWidth="110"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="40"/>
                    <RowDefinition MinHeight="30"/>
                    <RowDefinition Height="50" MinHeight="50"/>
                </Grid.RowDefinitions>
                <StackPanel x:Name="spOperatingAs" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,10,10,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock x:Name="tbPasswordOperatingAs" HorizontalAlignment="Right" Margin="0,3,0,0" TextWrapping="Wrap" Text="Operating As:" VerticalAlignment="Top" Width="77"/>
                    <ComboBox x:Name="cmbPasswordOperatingUser" HorizontalAlignment="Right" VerticalAlignment="Top" Width="185" Height="24" SelectedItem="{Binding SelectedIdentity}" ItemsSource="{Binding AvailableIdentities}" DisplayMemberPath="Name" SelectedValuePath="Name"/>
                </StackPanel>
                <TextBlock x:Name="tbPassword" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" 
						Foreground="{Binding PasswordInvalid, Converter={StaticResource PasswordValidationColor}}"
						FontWeight="{Binding PasswordInvalid, Converter={StaticResource PasswordValidationWeight}}"
						Text="{Binding PasswordValidationMessage}"/>
                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <PasswordBox Grid.Column="0" x:Name="pbPassword" Height="22" MinWidth="200"  VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,14,10,14" PasswordChanged="pbPassword_PasswordChanged"/>
                    <Button Grid.Column="1"  x:Name="btnOk" Content="Ok" Height="22" Padding="10,0,10,0" VerticalAlignment="Center" Width="Auto" HorizontalAlignment="Right" IsDefault="True" Command="{Binding Unlock}" CommandParameter="{Binding ElementName=pbPassword}" Margin="0,14,10,14" IsEnabled="False"/>
                </Grid>
                <Border Grid.Row="0" Grid.RowSpan="4" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="1"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
